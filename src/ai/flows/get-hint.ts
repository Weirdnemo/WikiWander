// This file is generated by Firebase Genkit.
'use server';
/**
 * @fileOverview Generates a hint summarizing the current Wikipedia article relative to the destination.
 *
 * - getHint - A function that generates a hint based on the current and target articles.
 * - GetHintInput - The input type for the getHint function.
 * - GetHintOutput - The return type for the getHint function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const GetHintInputSchema = z.object({
  currentArticleTitle: z.string().describe('The title of the current Wikipedia article.'),
  targetArticleTitle: z.string().describe('The title of the target Wikipedia article.'),
});
export type GetHintInput = z.infer<typeof GetHintInputSchema>;

const GetHintOutputSchema = z.object({
  hint: z.string().describe('A hint summarizing the current article relative to the target article.'),
  progress: z.string().describe('Progress of generating the hint')
});
export type GetHintOutput = z.infer<typeof GetHintOutputSchema>;

export async function getHint(input: GetHintInput): Promise<GetHintOutput> {
  return getHintFlow(input);
}

const hintPrompt = ai.definePrompt({
  name: 'hintPrompt',
  input: {schema: GetHintInputSchema},
  output: {schema: z.object({hint: z.string()})},
  prompt: `You are a helpful assistant helping a user navigate Wikipedia.

  The user is currently on the Wikipedia page titled "{{currentArticleTitle}}" and is trying to get to the page titled "{{targetArticleTitle}}".

  Provide a brief, one-sentence hint to help the user understand the current article in relation to the target article, so they can find a path towards the target. Do not provide links or specific instructions.`,
});

const getHintFlow = ai.defineFlow(
  {
    name: 'getHintFlow',
    inputSchema: GetHintInputSchema,
    outputSchema: GetHintOutputSchema,
  },
  async input => {
    const {output} = await hintPrompt(input);
    return {hint: output!.hint, progress: 'Generated a hint based on the current and target articles.'};
  }
);
